<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Data" #>
<#@ assembly name="System.Xml" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Xml" #>
<#@ output extension=".generated.cs" #>
<#
var connectionString = "Data Source=(LocalDb)\\v11.0;Initial Catalog=Jonesie.Web;Integrated Security=SSPI;";
var conn = new SqlConnection(connectionString);

var tableNames = new string[] {"RoleActionMap", "SchemaVersion", "SiteNavigation", "UserProfile", "webpages_Roles:Role","webpages_UsersInRoles:UserRole"};


try {
  conn.Open();

  //var tableName = System.IO.Path.GetFileNameWithoutExtension(this.Host.TemplateFile);

  try 
  {

#>/*******************************************
*
* Generated by a tool.  Do not alter.  
* 
*******************************************/
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks; 

namespace Jonesie.Web.Entities.Data
{             
<#                 
foreach(var tablePair in tableNames) 
{

  var parts = tablePair.Split(new char[] {':'}, StringSplitOptions.RemoveEmptyEntries);
  var tableName = parts[0];
  var className = tableName;
  if(parts.Length > 1) 
    className = parts[1];
  var selectQuery = "select * from " + tableName + " where 1 = 2";
  var command = new SqlCommand(selectQuery, conn);
  var ad = new SqlDataAdapter(command); 
  var ds = new DataSet();
  ad.FillSchema(ds, SchemaType.Mapped, tableName);
#>

  public partial class <#= className #>  : BaseEntity             
  {
<#
  var colNames = string.Empty;
  foreach (DataColumn dc in ds.Tables[0].Columns)
  {
    if(dc.ColumnName != "row_version") 
    {
      colNames += "\"" + dc.ColumnName.ToLower() + "\",";
#>
    public <#= dc.DataType.Name #> <#= dc.ColumnName #> { get; set; }                    
<#    
    }
  }

  if(!string.IsNullOrEmpty(colNames)) 
  {
    colNames = colNames.Substring(0, colNames.Length - 1);
  }

#>

    private static string[] _columnNames = { <#= colNames #> };

    public static string[] ColumnNames 
    {
      get 
      {
        return _columnNames;
      }
    }
  }
<#
}
#>
}
<#
  } catch (SqlException sex) {
    #>
    // TABLE NOT FOUND
    <#
  }
} 
catch (SqlException sex) {
    #>
    /* DATABASE NOT FOUND or COULD NOT BE OPENED

    <#= sex.Message     #> */ 
<#
}
#>